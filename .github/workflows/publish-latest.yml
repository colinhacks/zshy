name: Publish --latest

on:
  push:
    paths:
      - 'VERSION.txt'
    branches:
      - main

  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  publish:
    name: Main
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write # for npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          registry-url: 'https://registry.npmjs.org'
        
      - name: Run tests
        run: pnpm test
        
      - name: Build project
        run: pnpm build
        
      # - name: Configure npm authentication
      #   run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        
      - name: Publish to npm
        run: |
          npm whoami
          pnpm tsx versace.ts --latest --provenance --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Configure changelog
        run: |
          echo '{"categories": [], "template": "## Commits:\n\n${{ '${{UNCATEGORIZED}}' }}", "pr_template": ${{ '"- ${{MERGE_SHA}} ${{TITLE}}"' }} }' > changelog_config.json
          cat changelog_config.json
          echo "last_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "curr_commit=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Generate changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fromTag: "${{ env.last_tag }}"
          toTag: ${{ github.ref }}
          commitMode: true
          configuration: changelog_config.json

      - name: Get version from npm
        id: get_version
        run: echo "version=$(pnpm tsx versace.ts version get version)" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          release_name: v${{ env.version }}
          commitish: ${{ github.ref }}
          body: ${{ steps.github_release.outputs.changelog }}
          draft: false
          prerelease: false
