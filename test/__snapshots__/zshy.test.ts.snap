// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zshy with different tsconfig configurations > should work with basic.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./basic.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Skipping cleanup of declarationDir as it contains source files
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔══════════╤═══════════════╗
   ║ Location │ Resolved path ║
   ╟──────────┼───────────────╢
   ║ rootDir  │ ./src         ║
   ║ outDir   │ ./dist        ║
   ╚══════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./dist/index.cjs
   ./dist/index.d.cts
   ./dist/index.d.ts
   ./dist/index.js
   ./dist/plugins/a.cjs
   ./dist/plugins/a.d.cts
   ./dist/plugins/a.d.ts
   ./dist/plugins/a.js
   ./dist/plugins/b.cjs
   ./dist/plugins/b.d.cts
   ./dist/plugins/b.d.ts
   ./dist/plugins/b.js
   ./dist/utils.cjs
   ./dist/utils.d.cts
   ./dist/utils.d.ts
   ./dist/utils.js
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./dist/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./dist/index.d.cts",
       "import": "./dist/index.js",
       "require": "./dist/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./dist/utils.d.cts",
       "import": "./dist/utils.js",
       "require": "./dist/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./dist/plugins/*",
       "import": "./dist/plugins/*",
       "require": "./dist/plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with bin.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./bin.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Skipping cleanup of declarationDir as it contains source files
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔══════════╤═══════════════╗
   ║ Location │ Resolved path ║
   ╟──────────┼───────────────╢
   ║ rootDir  │ ./src         ║
   ║ outDir   │ ./dist        ║
   ╚══════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./dist/index.cjs
   ./dist/index.d.cts
   ./dist/index.d.ts
   ./dist/index.js
   ./dist/plugins/a.cjs
   ./dist/plugins/a.d.cts
   ./dist/plugins/a.d.ts
   ./dist/plugins/a.js
   ./dist/plugins/b.cjs
   ./dist/plugins/b.d.cts
   ./dist/plugins/b.d.ts
   ./dist/plugins/b.js
   ./dist/utils.cjs
   ./dist/utils.d.cts
   ./dist/utils.d.ts
   ./dist/utils.js
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./dist/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./dist/index.d.cts",
       "import": "./dist/index.js",
       "require": "./dist/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./dist/utils.d.cts",
       "import": "./dist/utils.js",
       "require": "./dist/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./dist/plugins/*",
       "import": "./dist/plugins/*",
       "require": "./dist/plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with bin-string.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./bin-string.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Skipping cleanup of declarationDir as it contains source files
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔══════════╤═══════════════╗
   ║ Location │ Resolved path ║
   ╟──────────┼───────────────╢
   ║ rootDir  │ ./src         ║
   ║ outDir   │ ./dist        ║
   ╚══════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/dist",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./dist/index.cjs
   ./dist/index.d.cts
   ./dist/index.d.ts
   ./dist/index.js
   ./dist/plugins/a.cjs
   ./dist/plugins/a.d.cts
   ./dist/plugins/a.d.ts
   ./dist/plugins/a.js
   ./dist/plugins/b.cjs
   ./dist/plugins/b.d.cts
   ./dist/plugins/b.d.ts
   ./dist/plugins/b.js
   ./dist/utils.cjs
   ./dist/utils.d.cts
   ./dist/utils.d.ts
   ./dist/utils.js
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./dist/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./dist/index.d.cts",
       "import": "./dist/index.js",
       "require": "./dist/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./dist/utils.d.cts",
       "import": "./dist/utils.js",
       "require": "./dist/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./dist/plugins/*",
       "import": "./dist/plugins/*",
       "require": "./dist/plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with legacy.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./legacy.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Skipping cleanup of declarationDir as it contains source files
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔══════════╤═══════════════╗
   ║ Location │ Resolved path ║
   ╟──────────┼───────────────╢
   ║ rootDir  │ ./src         ║
   ║ outDir   │ ./lib         ║
   ╚══════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2018",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": false,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/lib",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2018",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": false,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/lib",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./lib/index.cjs
   ./lib/index.d.cts
   ./lib/index.d.ts
   ./lib/index.js
   ./lib/plugins/a.cjs
   ./lib/plugins/a.d.cts
   ./lib/plugins/a.d.ts
   ./lib/plugins/a.js
   ./lib/plugins/b.cjs
   ./lib/plugins/b.d.cts
   ./lib/plugins/b.d.ts
   ./lib/plugins/b.js
   ./lib/utils.cjs
   ./lib/utils.d.cts
   ./lib/utils.d.ts
   ./lib/utils.js
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./lib/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./lib/index.d.cts",
       "import": "./lib/index.js",
       "require": "./lib/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./lib/utils.d.cts",
       "import": "./lib/utils.js",
       "require": "./lib/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./lib/plugins/*",
       "import": "./lib/plugins/*",
       "require": "./lib/plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with modern.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./modern.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Cleaning up declarationDir...
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔════════════════╤════════════════╗
   ║ Location       │ Resolved path  ║
   ╟────────────────┼────────────────╢
   ║ rootDir        │ .              ║
   ║ outDir         │ ./output/js    ║
   ║ declarationDir │ ./output/types ║
   ╚════════════════╧════════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2022",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "allowSyntheticDefaultImports": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/output/js",
     "rootDir": "<root>/test",
     "declaration": true,
     "declarationDir": "<root>/test/output/types",
     "emitDecoratorMetadata": true,
     "experimentalDecorators": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2022",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "allowSyntheticDefaultImports": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/output/js",
     "rootDir": "<root>/test",
     "declaration": true,
     "declarationDir": "<root>/test/output/types",
     "emitDecoratorMetadata": true,
     "experimentalDecorators": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./output/js/src/index.cjs
   ./output/js/src/index.js
   ./output/js/src/plugins/a.cjs
   ./output/js/src/plugins/a.js
   ./output/js/src/plugins/b.cjs
   ./output/js/src/plugins/b.js
   ./output/js/src/utils.cjs
   ./output/js/src/utils.js
   ./output/types/src/index.d.cts
   ./output/types/src/index.d.ts
   ./output/types/src/plugins/a.d.cts
   ./output/types/src/plugins/a.d.ts
   ./output/types/src/plugins/b.d.cts
   ./output/types/src/plugins/b.d.ts
   ./output/types/src/utils.d.cts
   ./output/types/src/utils.d.ts
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./output/js/src/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./output/types/src/index.d.cts",
       "import": "./output/js/src/index.js",
       "require": "./output/js/src/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./output/types/src/utils.d.cts",
       "import": "./output/js/src/utils.js",
       "require": "./output/js/src/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./output/types/src/plugins/*",
       "import": "./output/js/src/plugins/*",
       "require": "./output/js/src/plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with root-output.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./root-output.test.tsconfig.json
🗑️  Skipping cleanup of outDir as it contains source files
🗑️  Skipping cleanup of declarationDir as it contains source files
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔══════════╤═══════════════╗
   ║ Location │ Resolved path ║
   ╟──────────┼───────────────╢
   ║ rootDir  │ ./src         ║
   ║ outDir   │ .             ║
   ╚══════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test",
     "declaration": true,
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./index.cjs
   ./index.d.cts
   ./index.d.ts
   ./index.js
   ./plugins/a.cjs
   ./plugins/a.d.cts
   ./plugins/a.d.ts
   ./plugins/a.js
   ./plugins/b.cjs
   ./plugins/b.d.cts
   ./plugins/b.d.ts
   ./plugins/b.js
   ./utils.cjs
   ./utils.d.cts
   ./utils.d.ts
   ./utils.js
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./index.d.cts",
       "import": "./index.js",
       "require": "./index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./utils.d.cts",
       "import": "./utils.js",
       "require": "./utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./plugins/*",
       "import": "./plugins/*",
       "require": "./plugins/*"
     }
   }
🎉 Build complete!",
}
`;

exports[`zshy with different tsconfig configurations > should work with separate-declarations.test.tsconfig.json 1`] = `
{
  "exitCode": 0,
  "stderr": "",
  "stdout": "💎 Starting zshy build...
🗣️  Verbose mode enabled
🔍 Dry run mode enabled - no files will be written
⚙️  Detected project root: <root>/test
📦 Reading package.json from ./package.json
🔧 Parsed zshy config: {
     "exports": {
       ".": "./src/index.ts",
       "./utils": "./src/utils.ts",
       "./plugins/*": "./src/plugins/*"
     },
     "bin": "./src/index.ts",
     "sourceDialects": [
       "@zod/source"
     ]
   }
📁 Reading tsconfig from ./separate-declarations.test.tsconfig.json
🗑️  Cleaning up outDir...
🗑️  Cleaning up declarationDir...
➡️  Determining entrypoints...
   ╔═══════════════════════════════╤═════════════════════════════╗
   ║ Subpath                       │ Entrypoint                  ║
   ╟───────────────────────────────┼─────────────────────────────╢
   ║ "zshy-test-fixture"           │ ./src/index.ts              ║
   ║ "zshy-test-fixture/utils"     │ ./src/utils.ts              ║
   ║ "zshy-test-fixture/plugins/*" │ ./src/plugins/* (2 matches) ║
   ║ bin:zshy-test-fixture         │ ./src/index.ts              ║
   ╚═══════════════════════════════╧═════════════════════════════╝
🔧 Resolved build paths:
   ╔════════════════╤═══════════════╗
   ║ Location       │ Resolved path ║
   ╟────────────────┼───────────────╢
   ║ rootDir        │ ./src         ║
   ║ outDir         │ ./build       ║
   ║ declarationDir │ ./types       ║
   ╚════════════════╧═══════════════╝
🟨 Package is an ES module (package.json#type is "module")
🧱 Building CJS... (rewriting .ts -> .cjs/.d.cts)
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "CommonJS",
     "moduleResolution": "Node10",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/build",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "declarationDir": "<root>/test/types",
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
🧱 Building ESM...
🗣️  Resolved entrypoints: [
     "./src/index.ts",
     "./src/utils.ts",
     "./src/plugins/a.ts",
     "./src/plugins/b.ts"
   ]
🗣️  Resolved compilerOptions: {
     "target": "ES2020",
     "module": "ESNext",
     "moduleResolution": "Bundler",
     "strict": true,
     "esModuleInterop": true,
     "skipLibCheck": true,
     "forceConsistentCasingInFileNames": true,
     "outDir": "<root>/test/build",
     "rootDir": "<root>/test/src",
     "declaration": true,
     "declarationDir": "<root>/test/types",
     "noEmit": false,
     "emitDeclarationOnly": false,
     "rewriteRelativeImportExtensions": true,
     "verbatimModuleSyntax": false
   }
📜 [dryrun] Writing files... (16 total):
   ./build/index.cjs
   ./build/index.js
   ./build/plugins/a.cjs
   ./build/plugins/a.js
   ./build/plugins/b.cjs
   ./build/plugins/b.js
   ./build/utils.cjs
   ./build/utils.js
   ./types/index.d.cts
   ./types/index.d.ts
   ./types/plugins/a.d.cts
   ./types/plugins/a.d.ts
   ./types/plugins/b.d.cts
   ./types/plugins/b.d.ts
   ./types/utils.d.cts
   ./types/utils.d.ts
📦 Updating package.json#exports...
📦 Updating package.json#bin...
🗣️ Updated package.json#bin: "./build/index.cjs"
🔍 Skipping package.json modification (dry-run)
🗣️  Updated package.json#exports: {
     ".": {
       "@zod/source": "./src/index.ts",
       "types": "./types/index.d.cts",
       "import": "./build/index.js",
       "require": "./build/index.cjs"
     },
     "./utils": {
       "@zod/source": "./src/utils.ts",
       "types": "./types/utils.d.cts",
       "import": "./build/utils.js",
       "require": "./build/utils.cjs"
     },
     "./plugins/*": {
       "@zod/source": "./src/plugins/*",
       "types": "./types/plugins/*",
       "import": "./build/plugins/*",
       "require": "./build/plugins/*"
     }
   }
🎉 Build complete!",
}
`;
